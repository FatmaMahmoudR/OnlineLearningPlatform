@model OnlineLearningPlatform.Models.Course
@using System.Security.Claims

@{
    ViewData["Title"] = "Details";


}
@{
    string ExtractYouTubeVideoId(string url)
    {
        if (url.Contains("youtu.be/"))
        {
            var index = url.IndexOf("youtu.be/") + 9;
            return url.Substring(index, 11);
        }
        else if (url.Contains("v="))
        {
            var index = url.IndexOf("v=") + 2;
            return url.Substring(index, 11);
        }
        return string.Empty;
    }
}

<body>
    <header class="header">
        <section class="hero-section" style="background:url('@Url.Content("~/CrsLanding/assets/images/bg.png")')">
            <div class="hero-mask"></div>
            <div class="container text-center py-5">
                <div class="single-col-max mx-auto">
                    <h1 class="hero-heading mb-5">
                        <span class="brand mb-4 d-block">
                            <span class="text-highlight pr-2">{ </span>
                            <span class="name">@Model?.Category</span>
                            <span class="text-highlight pl-2"> }</span>
                        </span>
                        <span class="desc d-block">@Model?.Name</span>
                    </h1>

                    <div class="hero-summary">
                        <div class="row">
                            <div class="item col-4">
                                <div class="summary-desc mb-1"><i class="icon fas fa-video me-2"></i>Content</div>
                                <h4 class="summary-heading"> @Model.Lessons.Count+ <span class="desc">Videos</span></h4>
                            </div>
                            <div class="item col-4">
                                <div class="summary-desc mb-1"><i class="fas fa-bolt me-2"></i>Level</div>
                                <h4 class="summary-heading">@Model?.DifficultyLevel</h4>
                            </div>
                            <div class="item col-4">
                                <div class="summary-desc mb-1"><i class="icon fas fa-user-circle me-2"></i>Instructor</div>
                                <h4 class="summary-heading">@Model?.Instructor?.AppUser?.UserName</h4>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </header>

    <div class="sections-wrapper">
        <div class="section-blocks mb-5">
            <div id="section-overview" class="section-overview section pt-md-4 pt-lg-5">
                <div class="container py-5">
                    <div class="section-col-max mx-auto">
                        <h3 class="section-title text-center mb-4">What Will You Learn</h3>
                        <p class="mb-4">@Model?.Description</p>
                    </div>
                </div>
            </div>



            <!-- Control Options for Instructor -->
            @if (User.IsInRole("Instructor")) // Check if the user is an instructor
            {
                <div class="text-center mb-5">
                    <a style="text-decoration: none;" href="@Url.Action("Create", "Lesson", new { courseId = Model.Id })" class="btn btn-success me-2">Add New Lesson</a>
                </div>
            }


            <div id="section-content" class="section-content section">
                <div class="container py-5">
                    <div class="section-col-max mx-auto">
                        <h3 class="text-center mb-4">Course Content</h3>
                        <div class="accordion module-accordion" id="module-accordion">
                            <div class="module-item card">
                                <div id="module-1" class="module-content collapse show" aria-labelledby="module-heading-1">
                                    <div class="card-body p-0">
                                        @{
                                            int i = 1;

                                        }
                                        @foreach (var lesson in Model?.Lessons)
                                        {
                                            <div class="module-sub-item p-3">
                                                <div class="row justify-content-between">
                                                    <div class="col-9">
                                                        <span class="theme-text-secondary me-2">@i</span>
                                                        @{
                                                            i++;
                                                        }
                                                        <a class="video-play-trigger" href="#" data-bs-toggle="modal" data-bs-target="#modal-video-@lesson.Id">
                                                            @lesson.Title
                                                        </a>
                                                    </div>
                                                    
                                                </div>
                                                <div class="text-end ">
                                                    <!-- Edit and Delete buttons beside each lesson -->
                                                    @if (User.IsInRole("Instructor")) // Check if the user is an instructor
                                                    {
                                                        <text>
                                                            <a style="text-decoration: none;" href="@Url.Action("Edit", "Lesson", new { id = lesson.Id })" class="btn btn-outline-warning btn-sm">Edit</a>

                                                            <a style="text-decoration: none;" href="#deleteModal-@lesson.Id" class="btn btn-outline-danger btn-sm" data-toggle="modal">Delete</a>

                                                            <!-- Delete Confirmation Modal -->
                                                            <div id="deleteModal-@lesson.Id" class="modal fade">
                                                                <div class="modal-dialog modal-confirm">
                                                                    <div class="modal-content">

                                                                        <div class="modal-header flex-column">
                                                                            <i class="fas fa-circle-xmark fa-4x" style="color: #cc2e36;"></i>
                                                                            <h4 class="modal-title w-100">Are you sure?</h4>
                                                                        </div>


                                                                        <div class="modal-body">
                                                                            <p> Delete Lesson : "<span class="fs-6">@lesson.Title</span>" </p>
                                                                            <p>This process cannot be undone.</p>
                                                                        </div>


                                                                        <div class="modal-footer">
                                                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                                                            <form asp-controller="Lesson" asp-action="Delete" method="post">
                                                                                <input type="hidden" name="id" value="@lesson.Id" />
                                                                                <button type="submit" class="btn btn-danger">Delete</button>
                                                                            </form>

                                                                        </div>


                                                                    </div>
                                                                </div>
                                                            </div>

                                                        </text>
                                                        
                                                    }
                                                </div>
                                            </div>

                                            <div class="modal modal-video" id="modal-video-@lesson.Id" tabindex="-1" role="dialog" aria-hidden="true">
                                                <div class="modal-dialog">
                                                    <div class="modal-content">
                                                        <button id="closeButton-@lesson.Id" type="button" class="btn-close" data-bs-dismiss="modal" aria-hidden="true" onclick="stopVideo(@lesson.Id)">&times;</button>
                                                        <div class="modal-body">
                                                            <div class="ratio ratio-16x9">
                                                                @if (!string.IsNullOrEmpty(lesson.FilePath))
                                                                {
                                                                    var originalUrl = lesson.FilePath;
                                                                    var videoId = ExtractYouTubeVideoId(originalUrl);
                                                                    var embedUrl = $"https://www.youtube.com/embed/{videoId}?enablejsapi=1";

                                                                    <iframe id="videoPlayer-@lesson.Id" width="560" height="315" src="@embedUrl"
                                                                            data-lesson-id="@lesson.Id"
                                                                            data-enrollment-id="@Model.Id"
                                                                            title="YouTube video player"
                                                                            frameborder="0"
                                                                            allow="accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                                                            allowfullscreen>
                                                                    </iframe>
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <script src="https://www.youtube.com/iframe_api"></script>




	<script>
        ////////////// Close Button //////////////


        let players = {};

        // Function to initialize or update video players when the modal is shown
        function initializePlayer(lessonId, iframeId) {
            if (!players[lessonId]) {
                players[lessonId] = new YT.Player(iframeId);
            }
        }

        // Event listener for showing the modal to reinitialize the player
        document.querySelectorAll('.modal').forEach(modal => {
            modal.addEventListener('shown.bs.modal', function (event) {
                const iframe = modal.querySelector('iframe');
                const lessonId = iframe.getAttribute('data-lesson-id');
                const iframeId = iframe.id;
                initializePlayer(lessonId, iframeId);
            });
        });

        // Function to stop video playback
        function stopVideo(lessonId) {
            if (players[lessonId]) {
                players[lessonId].stopVideo();
            }
        }

        // Event listener for when modals are closed, to stop video automatically
        document.querySelectorAll('.modal').forEach(modal => {
            modal.addEventListener('hidden.bs.modal', function (event) {
                const lessonId = modal.querySelector('iframe').getAttribute('data-lesson-id');
                stopVideo(lessonId);
                const iframe = modal.querySelector('iframe');
                const src = iframe.getAttribute('src');
                iframe.setAttribute('src', '');
                iframe.setAttribute('src', src);
            });
        });




	</script>

    <style>
        body {
            font-family: 'Varela Round', sans-serif;
        }

        .modal-confirm {
            width: 400px;
        }

            .modal-confirm .modal-content {
                padding: 20px;
                border-radius: 5px;
                border: none;
                text-align: center;
                font-size: 14px;
            }

            .modal-confirm .modal-header {
                border-bottom: none;
                position: relative;
            }

            .modal-confirm h4 {
                text-align: center;
                font-size: 26px;
                margin: 30px 0 -10px;
            }


            .modal-confirm .modal-footer {
                border: none;
                text-align: center;
                border-radius: 5px;
                font-size: 13px;
                padding: 10px 15px 25px;
            }

    </style>


</body>
