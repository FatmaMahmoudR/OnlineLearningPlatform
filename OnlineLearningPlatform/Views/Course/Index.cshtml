@model IEnumerable<OnlineLearningPlatform.Models.Course>
@using System.Security.Claims

@{
    ViewData["Title"] = "Courses";
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier); // Get the logged-in user's ID
}

<link rel="stylesheet" href="~/css/Course-Index.css">

<h1>Courses</h1>

<!-- Search Form and Create Button Wrapper -->
<div class="search-create-wrapper">
    <form asp-action="Index" method="get" class="search-form">
        <p>
            <div class="input-group">
                <div class="form-outline" data-mdb-input-init>
                    <input id="search-input" type="search" name="searchString" class="form-control" value="@ViewData["CurrentFilter"]" placeholder="Course name" />
                </div>
                <button id="search-button" type="submit" class="btn btn-primary search-btn">
                    <i class="fas fa-search"></i> Search
                </button>
            </div>
        </p>
    </form>

    <!-- Create New Button -->
    @if (User.IsInRole("Admin"))
    {
        <a asp-controller="Course" asp-action="Create" class="btn btn-create">Create New</a>
    }
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DifficultyLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EnrollmentCount)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DifficultyLevel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentCount)
                </td>
                <td>

                    @if (User.IsInRole("Admin"))
                    {
                        <text>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">Edit</a> |

                            <a href="#myModal" class="btn btn-primary" data-toggle="modal">Delete</a> |

                            <!-- Modal HTML -->
                            <div id="myModal" class="modal fade">
                                <div class="modal-dialog modal-confirm">
                                    <div class="modal-content">
                                        <div class="modal-header flex-column">
                                            <i class="fas fa-circle-xmark fa-4x" style="color: #cc2e36;"></i>
                                            <h4 class="modal-title w-100">Are you sure?</h4>
                                        </div>

                    @if (User.IsInRole("Student"))
                    {
                        <!-- Enroll button -->
                        <form asp-controller="Course" asp-action="Enroll" method="post" style="display:inline;">
                            <input type="hidden" name="CourseId" value="@item.Id" />
                            <input type="hidden" name="StudentId" value="@userId" />
                            <button type="submit" class="btn btn-enroll">Enroll</button>
                        </form>
                    }

                    @if (User.IsInRole("Admin"))
                    {
                        <!-- Admin Actions: Edit and Delete -->
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-edit">Edit</a>

                        <!-- Direct Delete Action -->
                        <form asp-action="Delete" method="post" style="display:inline;">
                            <input type="hidden" name="id" value="@item.Id" />
                            <button type="submit" class="btn btn-delete" onclick="return confirm('Are you sure you want to delete this course?');">Delete</button>
                        </form>
                    }
                </div>
                <p style="color:dimgrey; margin-top:40px;">Already Enrolled: @Html.DisplayFor(modelItem => item.EnrollmentCount)</p>
            </div>
        </div>
    }
</div>
