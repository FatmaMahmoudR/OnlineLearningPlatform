@model OnlineLearningPlatform.Models.Enrollment
@using OnlineLearningPlatform.Entities.Models
@using OnlineLearningPlatform.Models; // Ensure you include your models namespace

@{
    ViewData["Title"] = "Details";
}

<head>
    <title>My Courses</title>
    <!-- Meta -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="Xiaoying Riley at 3rd Wave Media">
    <link rel="shortcut icon" href="@Url.Content("~/CrsLanding/assets/favicon.ico")">

    <!-- Google Font -->
    <link href="https://fonts.googleapis.com/css?family=Montserrat:800|Roboto:400,500,700&display=swap" rel="stylesheet">

    <!-- FontAwesome JS-->
    <script defer src="@Url.Content("~/CrsLanding/assets/fontawesome/js/all.min.js")"></script>

    <!-- Theme CSS -->
    <link id="theme-style" rel="stylesheet" href="@Url.Content("~/CrsLanding/assets/css/theme.css")">
</head>

@{
    string ExtractYouTubeVideoId(string url)
    {
        if (url.Contains("youtu.be/"))
        {
            var index = url.IndexOf("youtu.be/") + 9;
            return url.Substring(index, 11);
        }
        else if (url.Contains("v="))
        {
            var index = url.IndexOf("v=") + 2;
            return url.Substring(index, 11);
        }
        return string.Empty;
    }
}

<body>
    <header class="header">
        <section class="hero-section" style="background:url('@Url.Content("~/CrsLanding/assets/images/bg.png")')">
            <div class="hero-mask"></div>
            <div class="container text-center py-5">
                <div class="single-col-max mx-auto">
                    <h1 class="hero-heading mb-5">
                        <span class="brand mb-4 d-block">
                            <span class="text-highlight pr-2">{ </span>
                            <span class="name">@Model?.Course?.Category</span>
                            <span class="text-highlight pl-2"> }</span>
                        </span>
                        <span class="desc d-block">@Model?.Course?.Name</span>
                    </h1>

                    <div class="hero-summary">
                        <div class="row">
                            <div class="item col-4">
                                <div class="summary-desc mb-1"><i class="icon fas fa-video me-2"></i>Content</div>
                                <h4 class="summary-heading">80+ <span class="desc">Videos</span></h4>
                            </div>
                            <div class="item col-4">
                                <div class="summary-desc mb-1"><i class="fas fa-bolt me-2"></i>Level</div>
                                <h4 class="summary-heading">@Model?.Course?.DifficultyLevel</h4>
                            </div>
                            <div class="item col-4">
                                <div class="summary-desc mb-1"><i class="icon fas fa-user-circle me-2"></i>Instructor</div>
                                <h4 class="summary-heading">@Model?.Course?.Instructor?.AppUser?.UserName</h4>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </header>

    <div class="sections-wrapper">
        <div class="section-blocks mb-5">
            <div id="section-overview" class="section-overview section pt-md-4 pt-lg-5">
                <div class="container py-5">
                    <div class="section-col-max mx-auto">
                        <h3 class="section-title text-center mb-4">What Will You Learn</h3>
                        <p class="mb-4">@Model?.Course?.Description</p>
                    </div>
                </div>
            </div>

            <div id="section-content" class="section-content section">
                <div class="container py-5">
                    <div class="section-col-max mx-auto">
                        <h3 class="text-center mb-4">Course Content</h3>
                        <div class="accordion module-accordion" id="module-accordion">
                            <div class="module-item card">
                                <div id="module-1" class="module-content collapse show" aria-labelledby="module-heading-1">
                                    <div class="card-body p-0">
                                        @{
                                            int i = 1;
                                            var completedLessons = Model.LessonCompletions.ToList();

                                            

                                        }
                                        @foreach (var lesson in Model?.Course?.Lessons)
                                        {
                                            <div class="module-sub-item p-3">
                                                <div class="row justify-content-between">
                                                    <div class="col-9">
                                                        <span class="theme-text-secondary me-2">@i</span>
                                                        @{
                                                            i++;
                                                           var lesson_enroll= Model.LessonCompletions.FirstOrDefault(l => l.LessonId == lesson.Id);
                                                        }
                                                        <a class="video-play-trigger" href="#" data-bs-toggle="modal" data-bs-target="#modal-video-@lesson.Id">
                                                            
                                                            @if (lesson_enroll.IsCompleted)
                                                            {
                                                                <i class="fas fa-circle-check fa-solid" style="color: #1cb048;"></i>
                                                            }
                                                            else
                                                            {
                                                                <i class="fas fa-circle-check fa-regular fa-beat"></i>
                                                            }
                                                            @lesson.Title
                                                        </a>
                                                    </div>
                                                    <div class="col-3 text-end extra-info">02:30</div>
                                                </div>
                                            </div>

                                            <div class="modal modal-video" id="modal-video-@lesson.Id" tabindex="-1" role="dialog" aria-hidden="true">
                                                <div class="modal-dialog">
                                                    <div class="modal-content">
                                                        <button id="completeLessonButton_@lesson.Id" onclick="completeLesson(@Model.Id, @lesson.Id)">Mark as Complete</button>

                                                        <button id="closeButton-@lesson.Id" type="button" class="btn-close" data-bs-dismiss="modal" aria-hidden="true" onclick="stopVideo(@lesson.Id)">&times;</button>
                                                        <div class="modal-body">
                                                            <div class="ratio ratio-16x9">
                                                                @if (!string.IsNullOrEmpty(lesson.FilePath))
                                                                {
                                                                    var originalUrl = lesson.FilePath;
                                                                    var videoId = ExtractYouTubeVideoId(originalUrl);
                                                                    var embedUrl = $"https://www.youtube.com/embed/{videoId}?enablejsapi=1";

                                                                    <iframe id="videoPlayer-@lesson.Id" width="560" height="315" src="@embedUrl"
                                                                            data-lesson-id="@lesson.Id"
                                                                            data-enrollment-id="@Model.Id"
                                                                            title="YouTube video player"
                                                                            frameborder="0"
                                                                            allow="accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                                                            allowfullscreen>
                                                                    </iframe>
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <script src="@Url.Content("~/CrsLanding/assets/plugins/popper.min.js")"></script>
    <script src="@Url.Content("~/CrsLanding/assets/plugins/bootstrap/js/bootstrap.min.js")"></script>
    <script src="@Url.Content("~/CrsLanding/assets/js/main.js")"></script>

    <script src="https://www.youtube.com/iframe_api"></script>



    <script>
        ////////////// Mark Lesson as Completed //////////////

        function completeLesson(enrollmentId, lessonId) {
            fetch(`/Enrollment/MarkLessonCompleted/${enrollmentId}/${lessonId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            }).then(response => {
                if (response.ok) {
                    alert("Lesson marked as complete!");
                   
                    const button = document.querySelector(`#completeLessonButton_${lessonId}`);
                    button.innerText = "Lesson Completed";
                    button.disabled = true;
                } else {
                    alert("Error marking lesson as complete");
                }
            }).catch(error => {
                console.error('Error:', error);
                alert("An error occurred while marking the lesson as complete.");
            });
        }

        ////////////// Close Button //////////////


        let players = {};

        // Function to initialize or update video players when the modal is shown
        function initializePlayer(lessonId, iframeId) {
            if (!players[lessonId]) {
                players[lessonId] = new YT.Player(iframeId);
            }
        }

        // Event listener for showing the modal to reinitialize the player
        document.querySelectorAll('.modal').forEach(modal => {
            modal.addEventListener('shown.bs.modal', function (event) {
                const iframe = modal.querySelector('iframe');
                const lessonId = iframe.getAttribute('data-lesson-id');
                const iframeId = iframe.id;
                initializePlayer(lessonId, iframeId);  
            });
        });

        // Function to stop video playback
        function stopVideo(lessonId) {
            if (players[lessonId]) {
                players[lessonId].stopVideo(); 
            }
        }

        // Event listener for when modals are closed, to stop video automatically
        document.querySelectorAll('.modal').forEach(modal => {
            modal.addEventListener('hidden.bs.modal', function (event) {
                const lessonId = modal.querySelector('iframe').getAttribute('data-lesson-id');
                stopVideo(lessonId);
                const iframe = modal.querySelector('iframe');
                const src = iframe.getAttribute('src');
                iframe.setAttribute('src', '');  
                iframe.setAttribute('src', src); 
            });
        });

        // Mark Lesson as Completed
        function completeLesson(enrollmentId, lessonId) {
            fetch(`/Enrollment/MarkLessonCompleted/${enrollmentId}/${lessonId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Cache-Control': 'no-cache'
                }
            }).then(response => {
                if (response.ok) {
                    alert("Lesson marked as complete!");

                    const button = document.querySelector(`#completeLessonButton_${lessonId}`);
                    button.innerText = "Lesson Completed";
                    button.disabled = true;

                    // Refresh the page to reflect changes
                    location.reload(); // Add this line to refresh the page
                } else {
                    alert("Error marking lesson as complete");
                }
            }).catch(error => {
                console.error('Error:', error);
                alert("An error occurred while marking the lesson as complete.");
            });
        }


        // YouTube API Ready Function
        function onYouTubeIframeAPIReady() {
            document.querySelectorAll('iframe').forEach((iframe) => {
                const lessonId = iframe.getAttribute('data-lesson-id');
                initializePlayer(lessonId, iframe.id); 
            });
        }


        ///////////// Actual Video ////////////////





    </script>

  


</body>




